package dev.aaronhowser.mods.geneticsresequenced.default_genes

import dev.aaronhowser.mods.geneticsresequenced.api.capability.genes.GeneBuilder
import dev.aaronhowser.mods.geneticsresequenced.util.OtherUtil
import net.minecraft.world.effect.MobEffects

@Suppress("unused", "MemberVisibilityCanBePrivate")
object DefaultGenes {

    fun registerDefaultGenes() {
        // Doesn't do anything, but it loads the object which initializes the genes
    }

    private fun registerGene(geneId: String): GeneBuilder =
        GeneBuilder(OtherUtil.modResource(geneId))

    val BASIC = registerGene("basic")
        .setDnaPointsRequired(0)
        .build()

    //Standard list
    val BIOLUMINESCENCE = registerGene("bioluminescence")
        .setDnaPointsRequired(16)
        .build()
    val CLAWS = registerGene("claws")
        .setDnaPointsRequired(20)
        .build()
    val DRAGONS_BREATH = registerGene("dragons_breath")
        .setDnaPointsRequired(20)
        .build()
    val EAT_GRASS = registerGene("eat_grass")
        .setDnaPointsRequired(16)
        .build()
    val EFFICIENCY = registerGene("efficiency")
        .setDnaPointsRequired(30)
        .build()
    val EMERALD_HEART = registerGene("emerald_heart")
        .setDnaPointsRequired(30)
        .build()
    val ENDER_DRAGON_HEALTH = registerGene("ender_dragon_health")
        .setDnaPointsRequired(60)
        .build()
    val EXPLOSIVE_EXIT = registerGene("explosive_exit")
        .setDnaPointsRequired(20)
        .build()
    val FIRE_PROOF = registerGene("fire_proof")
        .setDnaPointsRequired(24)
        .build()
    val HASTE = registerGene("haste")
        .setDnaPointsRequired(30)
        .setPotion(MobEffects.DIG_SPEED, 1)
        .build()
    val INFINITY = registerGene("infinity")
        .setDnaPointsRequired(30)
        .build()
    val INVISIBLE = registerGene("invisible")
        .setDnaPointsRequired(50)
        .setPotion(MobEffects.INVISIBILITY, 1)
        .build()
    val ITEM_MAGNET = registerGene("item_magnet")
        .setDnaPointsRequired(30)
        .build()
    val JUMP_BOOST = registerGene("jump_boost")
        .setDnaPointsRequired(10)
        .setPotion(MobEffects.JUMP, 1)
        .build()
    val KEEP_INVENTORY = registerGene("keep_inventory")
        .setDnaPointsRequired(40)
        .build()
    val LAY_EGG = registerGene("lay_egg")
        .setDnaPointsRequired(12)
        .build()
    val LUCK = registerGene("luck")
        .setDnaPointsRequired(50)
        .setPotion(MobEffects.LUCK, 1)
        .build()
    val MEATY = registerGene("meaty")
        .setDnaPointsRequired(12)
        .build()
    val MILKY = registerGene("milky")
        .setDnaPointsRequired(12)
        .build()
    val MOB_SIGHT = registerGene("mob_sight")
        .setDnaPointsRequired(16)
        .build()
    val MORE_HEARTS = registerGene("more_hearts")
        .setDnaPointsRequired(40)
        .build()
    val NIGHT_VISION = registerGene("night_vision")
        .setDnaPointsRequired(16)
        .setPotion(MobEffects.NIGHT_VISION, 1)
        .build()
    val NO_FALL_DAMAGE = registerGene("no_fall_damage")
        .setDnaPointsRequired(30)
        .build()
    val NO_HUNGER = registerGene("no_hunger")
        .setDnaPointsRequired(30)
        .build()
    val POISON_IMMUNITY = registerGene("poison_immunity")
        .setDnaPointsRequired(24)
        .build()
    val REGENERATION = registerGene("regeneration")
        .setDnaPointsRequired(60)
        .setPotion(MobEffects.REGENERATION, 1)
        .build()
    val RESISTANCE = registerGene("resistance")
        .setDnaPointsRequired(30)
        .setPotion(MobEffects.DAMAGE_RESISTANCE, 1)
        .build()
    val SCARE_CREEPERS = registerGene("scare_creepers")
        .setDnaPointsRequired(20)
        .build()
    val SCARE_SKELETONS = registerGene("scare_skeletons")
        .setDnaPointsRequired(20)
        .build()
    val SHOOT_FIREBALLS = registerGene("shoot_fireballs")
        .setDnaPointsRequired(24)
        .build()
    val SLIMY_DEATH = registerGene("slimy_death")
        .setDnaPointsRequired(60)
        .build()
    val SPEED = registerGene("speed")
        .setDnaPointsRequired(20)
        .setPotion(MobEffects.MOVEMENT_SPEED, 1)
        .build()
    val STEP_ASSIST = registerGene("step_assist")
        .setDnaPointsRequired(10)
        .build()
    val STRENGTH = registerGene("strength")
        .setDnaPointsRequired(20)
        .setPotion(MobEffects.DAMAGE_BOOST, 1)
        .build()
    val TELEPORT = registerGene("teleport")
        .setDnaPointsRequired(24)
        .build()
    val THORNS = registerGene("thorns")
        .setDnaPointsRequired(12)
        .build()
    val WALL_CLIMBING = registerGene("wall_climbing")
        .setDnaPointsRequired(40)
        .build()
    val WATER_BREATHING = registerGene("water_breathing")
        .setDnaPointsRequired(16)
        .build()
    val WOOLY = registerGene("wooly")
        .setDnaPointsRequired(12)
        .build()
    val WITHER_HIT = registerGene("wither_hit")
        .setDnaPointsRequired(20)
        .build()
    val WITHER_PROOF = registerGene("wither_proof")
        .setDnaPointsRequired(40)
        .build()
    val XP_MAGNET = registerGene("xp_magnet")
        .setDnaPointsRequired(30)
        .build()

    //Negative effects
    val BLINDNESS = registerGene("blindness")
        .setPotion(MobEffects.BLINDNESS, 1)
        .setNegative()
        .build()
    val CURSED = registerGene("cursed")
        .setPotion(MobEffects.UNLUCK, 1)
        .setNegative()
        .build()
    val DEAD_ALL = registerGene("black_death")
        .setNegative()
        .build()
    val DEAD_CREEPERS = registerGene("green_death")
        .setNegative()
        .build()
    val DEAD_HOSTILE = registerGene("white_death")
        .setNegative()
        .build()
    val DEAD_OLD_AGE = registerGene("gray_death")
        .setNegative()
        .build()
    val DEAD_UNDEAD = registerGene("undeath")
        .setNegative()
        .build()
    val FLAMBE = registerGene("flambe")
        .setNegative()
        .build()
    val HUNGER = registerGene("hunger")
        .setPotion(MobEffects.HUNGER, 1)
        .setNegative()
        .build()
    val LEVITATION = registerGene("levitation")
        .setPotion(MobEffects.LEVITATION, 1)
        .setNegative()
        .build()
    val MINING_WEAKNESS = registerGene("mining_weakness")
        .setPotion(MobEffects.DIG_SLOWDOWN, 1)
        .setNegative()
        .build()
    val NAUSEA = registerGene("nausea")
        .setPotion(MobEffects.CONFUSION, 1)
        .setNegative()
        .build()
    val POISON = registerGene("poison")
        .setPotion(MobEffects.POISON, 1)
        .setNegative()
        .build()
    val POISON_4 = registerGene("poison_4")
        .setPotion(MobEffects.POISON, 4)
        .setNegative()
        .build()
    val REALLY_DEAD_ALL = registerGene("void_death")
        .setNegative()
        .build()
    val SLOWNESS = registerGene("slowness")
        .setPotion(MobEffects.MOVEMENT_SLOWDOWN, 1)
        .setNegative()
        .build()
    val SLOWNESS_4 = registerGene("slowness_4")
        .setPotion(MobEffects.MOVEMENT_SLOWDOWN, 4)
        .setNegative()
        .build()
    val SLOWNESS_6 = registerGene("slowness_6")
        .setPotion(MobEffects.MOVEMENT_SLOWDOWN, 6)
        .setNegative()
        .build()
    val WEAKNESS = registerGene("weakness")
        .setPotion(MobEffects.WEAKNESS, 1)
        .setNegative()
        .build()
    val WITHER = registerGene("wither")
        .setPotion(MobEffects.WITHER, 1)
        .setNegative()
        .build()

    // Mutations (must be last as their Builder arguments require other genes to be initialized)

    val CLAWS_2 = registerGene("claws_2")
        .setDnaPointsRequired(50)
        .addRequiredGenes(CLAWS)
        .build()
    val EFFICIENCY_4 = registerGene("efficiency_4")
        .setDnaPointsRequired(50)
        .addRequiredGenes(EFFICIENCY)
        .build()
    val FLIGHT = registerGene("flight")
        .setDnaPointsRequired(50)
        .addRequiredGenes(TELEPORT, JUMP_BOOST, NO_FALL_DAMAGE)
        .build()
    val HASTE_2 = registerGene("haste_2")
        .setDnaPointsRequired(50)
        .addRequiredGenes(HASTE)
        .setPotion(MobEffects.DIG_SPEED, 2)
        .build()
    val MEATY_2 = registerGene("meaty_2")
        .setDnaPointsRequired(50)
        .addRequiredGenes(MEATY)
        .build()
    val MORE_HEARTS_2 = registerGene("more_hearts_2")
        .setDnaPointsRequired(50)
        .addRequiredGenes(MORE_HEARTS)
        .build()
    val REGENERATION_4 = registerGene("regeneration_4")
        .setDnaPointsRequired(50)
        .addRequiredGenes(REGENERATION)
        .setPotion(MobEffects.REGENERATION, 4)
        .build()
    val RESISTANCE_2 = registerGene("resistance_2")
        .setDnaPointsRequired(50)
        .addRequiredGenes(RESISTANCE)
        .setPotion(MobEffects.DAMAGE_RESISTANCE, 2)
        .build()
    val SPEED_2 = registerGene("speed_2")
        .setDnaPointsRequired(50)
        .addRequiredGenes(SPEED)
        .setPotion(MobEffects.MOVEMENT_SPEED, 2)
        .build()
    val SPEED_4 = registerGene("speed_4")
        .setDnaPointsRequired(50)
        .setPotion(MobEffects.MOVEMENT_SPEED, 4)
        .addRequiredGenes(SPEED_2)
        .build()
    val STRENGTH_2 = registerGene("strength_2")
        .setDnaPointsRequired(50)
        .addRequiredGenes(STRENGTH)
        .setPotion(MobEffects.DAMAGE_BOOST, 2)
        .build()
    val SCARE_ZOMBIES = registerGene("scare_zombies")
        .setDnaPointsRequired(50)
        .addRequiredGenes(SCARE_CREEPERS)
        .build()
    val SCARE_SPIDERS = registerGene("scare_spiders")
        .setDnaPointsRequired(50)
        .addRequiredGenes(SCARE_SKELETONS)
        .build()
    val PHOTOSYNTHESIS = registerGene("photosynthesis")
        .setDnaPointsRequired(40)
        .addRequiredGenes(THORNS)
        .build()


}